
<stdin>:	file format elf64-amdgpu

Disassembly of section .text:

0000000000001000 <_Z12histogram256PjS_>:
	s_load_dword s9, s[4:5], 0x4                               // 000000001000: C0020242 00000004
	s_load_dwordx4 s[0:3], s[6:7], 0x0                         // 000000001008: C00A0003 00000000
	v_lshlrev_b32_e32 v3, 2, v0                                // 000000001010: 24060082
	v_and_b32_e32 v1, 0x7c, v3                                 // 000000001014: 260206FF 0000007C
	v_add_u32_e32 v2, 0, v3                                    // 00000000101C: 68040680
	s_waitcnt lgkmcnt(0)                                       // 000000001020: BF8CC07F
	s_and_b32 s10, s9, 0xffff                                  // 000000001024: 860AFF09 0000FFFF
	s_lshl_b32 s4, s10, 5                                      // 00000000102C: 8E04850A
	s_lshl_b32 s5, s10, 2                                      // 000000001030: 8E05820A
	s_mov_b32 s6, 64                                           // 000000001034: BE8600C0
	v_mov_b32_e32 v4, 0                                        // 000000001038: 7E080280
	v_add_u32_e32 v5, s5, v2                                   // 00000000103C: 680A0405
	ds_write_b32 v5, v4                                        // 000000001040: D81A0000 00000405
	v_add_u32_e32 v5, s5, v5                                   // 000000001048: 680A0A05
	ds_write_b32 v5, v4                                        // 00000000104C: D81A0000 00000405
	v_add_u32_e32 v5, s5, v5                                   // 000000001054: 680A0A05
	ds_write_b32 v5, v4                                        // 000000001058: D81A0000 00000405
	v_add_u32_e32 v5, s5, v5                                   // 000000001060: 680A0A05
	ds_write_b32 v5, v4                                        // 000000001064: D81A0000 00000405
	v_add_u32_e32 v5, s5, v5                                   // 00000000106C: 680A0A05
	s_add_i32 s6, s6, -8                                       // 000000001070: 8106C806
	ds_write_b32 v5, v4                                        // 000000001074: D81A0000 00000405
	v_add_u32_e32 v5, s5, v5                                   // 00000000107C: 680A0A05
	ds_write_b32 v2, v4                                        // 000000001080: D81A0000 00000402
	v_add_u32_e32 v2, s4, v2                                   // 000000001088: 68040404
	s_cmp_eq_u32 s6, 0                                         // 00000000108C: BF068006
	ds_write_b32 v5, v4                                        // 000000001090: D81A0000 00000405
	v_add_u32_e32 v5, s5, v5                                   // 000000001098: 680A0A05
	ds_write_b32 v5, v4                                        // 00000000109C: D81A0000 00000405
	s_cbranch_scc0 65509                                       // 0000000010A4: BF84FFE5 <_Z12histogram256PjS_+0x3c>
	s_mov_b32 s9, 0                                            // 0000000010A8: BE890080
	v_alignbit_b32 v4, 0, s8, 25                               // 0000000010AC: D1CE0004 02641080
	s_lshl_b64 s[4:5], s[8:9], 7                               // 0000000010B4: 8E848708
	v_mul_lo_u32 v7, v4, s10                                   // 0000000010B8: D2850007 00001504
	s_or_b32 s5, s4, 2                                         // 0000000010C0: 87058204
	v_lshrrev_b32_e32 v2, 5, v0                                // 0000000010C4: 20040085
	s_mul_hi_u32 s6, s5, s10                                   // 0000000010C8: 96060A05
	s_mul_i32 s5, s5, s10                                      // 0000000010CC: 92050A05
	v_add_u32_e32 v9, v1, v2                                   // 0000000010D0: 68120501
	v_mov_b32_e32 v1, s5                                       // 0000000010D4: 7E020205
	s_or_b32 s5, s4, 1                                         // 0000000010D8: 87058104
	v_add_u32_e32 v2, s6, v7                                   // 0000000010DC: 68040E06
	s_mul_hi_u32 s6, s5, s10                                   // 0000000010E0: 96060A05
	s_mul_i32 s5, s5, s10                                      // 0000000010E4: 92050A05
	s_or_b32 s4, s4, 3                                         // 0000000010E8: 87048304
	v_mov_b32_e32 v5, s5                                       // 0000000010EC: 7E0A0205
	s_mul_hi_u32 s5, s4, s10                                   // 0000000010F0: 96050A04
	s_mul_i32 s4, s4, s10                                      // 0000000010F4: 92040A04
	v_add_u32_e32 v6, s6, v7                                   // 0000000010F8: 680C0E06
	v_add_u32_e32 v8, s5, v7                                   // 0000000010FC: 68100E05
	v_mov_b32_e32 v7, s4                                       // 000000001100: 7E0E0204
	v_lshlrev_b64 v[1:2], 2, v[1:2]                            // 000000001104: D28F0001 00020282
	v_mov_b32_e32 v4, s1                                       // 00000000110C: 7E080201
	v_add_co_u32_e32 v3, vcc, s0, v3                           // 000000001110: 32060600
	v_lshlrev_b64 v[5:6], 2, v[5:6]                            // 000000001114: D28F0005 00020A82
	v_lshlrev_b64 v[7:8], 2, v[7:8]                            // 00000000111C: D28F0007 00020E82
	s_mul_hi_u32 s5, s8, s10                                   // 000000001124: 96050A08
	s_mul_i32 s4, s8, s10                                      // 000000001128: 92040A08
	v_addc_co_u32_e32 v4, vcc, 0, v4, vcc                      // 00000000112C: 38080880
	s_lshl_b32 s0, s10, 4                                      // 000000001130: 8E00840A
	s_mov_b32 s1, s9                                           // 000000001134: BE810009
	s_lshl_b64 s[4:5], s[4:5], 9                               // 000000001138: 8E848904
	s_movk_i32 s6, 0x80                                        // 00000000113C: B0060080
	s_waitcnt lgkmcnt(0)                                       // 000000001140: BF8CC07F
	s_barrier                                                  // 000000001144: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000001148: BF8CC07F
	v_mov_b32_e32 v11, s5                                      // 00000000114C: 7E160205
	v_add_co_u32_e32 v10, vcc, s4, v3                          // 000000001150: 32140604
	v_addc_co_u32_e32 v11, vcc, v4, v11, vcc                   // 000000001154: 38161704
	global_load_dword v12, v[10:11], off                       // 000000001158: DC508000 0C7F000A
	v_add_co_u32_e32 v10, vcc, v3, v5                          // 000000001160: 32140B03
	v_addc_co_u32_e32 v11, vcc, v4, v6, vcc                    // 000000001164: 38160D04
	global_load_dword v13, v[10:11], off                       // 000000001168: DC508000 0D7F000A
	v_add_co_u32_e32 v10, vcc, v3, v1                          // 000000001170: 32140303
	v_addc_co_u32_e32 v11, vcc, v4, v2, vcc                    // 000000001174: 38160504
	global_load_dword v14, v[10:11], off                       // 000000001178: DC508000 0E7F000A
	v_add_co_u32_e32 v10, vcc, v3, v7                          // 000000001180: 32140F03
	v_addc_co_u32_e32 v11, vcc, v4, v8, vcc                    // 000000001184: 38161104
	global_load_dword v10, v[10:11], off                       // 000000001188: DC508000 0A7F000A
	s_add_i32 s6, s6, -4                                       // 000000001190: 8106C406
	v_add_co_u32_e32 v3, vcc, s0, v3                           // 000000001194: 32060600
	s_cmp_eq_u32 s6, 0                                         // 000000001198: BF068006
	s_waitcnt vmcnt(3)                                         // 00000000119C: BF8C0F73
	v_lshlrev_b32_e32 v11, 7, v12                              // 0000000011A0: 24161887
	v_add3_u32 v11, v9, v11, 0                                 // 0000000011A4: D1FF000B 02021709
	ds_read_u8 v12, v11                                        // 0000000011AC: D8740000 0C00000B
	s_waitcnt vmcnt(2)                                         // 0000000011B4: BF8C0F72
	v_lshlrev_b32_e32 v13, 7, v13                              // 0000000011B8: 241A1A87
	v_add3_u32 v13, v9, v13, 0                                 // 0000000011BC: D1FF000D 02021B09
	s_waitcnt lgkmcnt(0)                                       // 0000000011C4: BF8CC07F
	v_add_u16_e32 v12, 1, v12                                  // 0000000011C8: 4C181881
	ds_write_b8 v11, v12                                       // 0000000011CC: D83C0000 00000C0B
	ds_read_u8 v11, v13                                        // 0000000011D4: D8740000 0B00000D
	s_waitcnt vmcnt(1)                                         // 0000000011DC: BF8C0F71
	v_lshlrev_b32_e32 v14, 7, v14                              // 0000000011E0: 241C1C87
	v_add3_u32 v14, v9, v14, 0                                 // 0000000011E4: D1FF000E 02021D09
	v_mov_b32_e32 v12, s1                                      // 0000000011EC: 7E180201
	v_addc_co_u32_e32 v4, vcc, v4, v12, vcc                    // 0000000011F0: 38081904
	s_waitcnt lgkmcnt(0)                                       // 0000000011F4: BF8CC07F
	v_add_u16_e32 v11, 1, v11                                  // 0000000011F8: 4C161681
	ds_write_b8 v13, v11                                       // 0000000011FC: D83C0000 00000B0D
	ds_read_u8 v11, v14                                        // 000000001204: D8740000 0B00000E
	s_waitcnt vmcnt(0)                                         // 00000000120C: BF8C0F70
	v_lshlrev_b32_e32 v10, 7, v10                              // 000000001210: 24141487
	v_add3_u32 v10, v9, v10, 0                                 // 000000001214: D1FF000A 02021509
	s_waitcnt lgkmcnt(0)                                       // 00000000121C: BF8CC07F
	v_add_u16_e32 v11, 1, v11                                  // 000000001220: 4C161681
	ds_write_b8 v14, v11                                       // 000000001224: D83C0000 00000B0E
	ds_read_u8 v11, v10                                        // 00000000122C: D8740000 0B00000A
	s_waitcnt lgkmcnt(0)                                       // 000000001234: BF8CC07F
	v_add_u16_e32 v11, 1, v11                                  // 000000001238: 4C161681
	ds_write_b8 v10, v11                                       // 00000000123C: D83C0000 00000B0A
	s_cbranch_scc0 65473                                       // 000000001244: BF84FFC1 <_Z12histogram256PjS_+0x14c>
	s_cmpk_gt_u32 s10, 0x100                                   // 000000001248: B50A0100
	s_waitcnt lgkmcnt(0)                                       // 00000000124C: BF8CC07F
	s_barrier                                                  // 000000001250: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000001254: BF8CC07F
	s_cbranch_scc1 202                                         // 000000001258: BF8500CA <_Z12histogram256PjS_+0x584>
	v_cvt_f32_u32_e32 v1, s10                                  // 00000000125C: 7E020C0A
	s_mov_b32 s5, 0x43800000                                   // 000000001260: BE8500FF 43800000
	s_lshl_b64 s[0:1], s[8:9], 8                               // 000000001268: 8E808808
	v_mov_b32_e32 v3, s1                                       // 00000000126C: 7E060201
	v_rcp_iflag_f32_e32 v2, v1                                 // 000000001270: 7E044701
	s_mov_b32 s4, 0                                            // 000000001274: BE840080
	v_mov_b32_e32 v6, 0                                        // 000000001278: 7E0C0280
	v_lshlrev_b32_e32 v7, 5, v0                                // 00000000127C: 240E0085
	v_mul_f32_e32 v2, s5, v2                                   // 000000001280: 0A040405
	v_trunc_f32_e32 v2, v2                                     // 000000001284: 7E043902
	v_cvt_u32_f32_e32 v4, v2                                   // 000000001288: 7E080F02
	v_mad_f32 v2, -v2, v1, s5                                  // 00000000128C: D1C10002 20160302
	v_cmp_ge_f32_e64 vcc, |v2|, v1                             // 000000001294: D046016A 00020302
	s_movk_i32 s8, 0xff                                        // 00000000129C: B00800FF
	v_addc_co_u32_e32 v1, vcc, 0, v4, vcc                      // 0000000012A0: 38020880
	v_add_co_u32_e32 v8, vcc, s0, v0                           // 0000000012A4: 32100000
	v_and_b32_e32 v5, 0x7ff, v1                                // 0000000012A8: 260A02FF 000007FF
	v_addc_co_u32_e32 v9, vcc, 0, v3, vcc                      // 0000000012B0: 38120680
	s_mov_b64 s[0:1], 0                                        // 0000000012B4: BE800180
	s_mov_b32 s5, s4                                           // 0000000012B8: BE850004
	s_mov_b32 s6, s4                                           // 0000000012BC: BE860004
	s_mov_b32 s7, s4                                           // 0000000012C0: BE870004
	v_mov_b32_e32 v1, s4                                       // 0000000012C4: 7E020204
	v_lshl_add_u32 v10, s0, 12, v7                             // 0000000012C8: D1FD000A 041D1800
	v_mov_b32_e32 v2, s5                                       // 0000000012D0: 7E040205
	v_mov_b32_e32 v3, s6                                       // 0000000012D4: 7E060206
	v_mov_b32_e32 v4, s7                                       // 0000000012D8: 7E080207
	s_mov_b32 s5, 0                                            // 0000000012DC: BE850080
	v_add_u32_e32 v11, s5, v0                                  // 0000000012E0: 68160005
	v_and_or_b32 v12, v11, 31, v10                             // 0000000012E4: D201000C 04293F0B
	v_add_u32_e32 v13, 1, v11                                  // 0000000012EC: 681A1681
	v_add_u32_e32 v14, 2, v11                                  // 0000000012F0: 681C1682
	v_add_u32_e32 v15, 3, v11                                  // 0000000012F4: 681E1683
	v_add_u32_e32 v16, 4, v11                                  // 0000000012F8: 68201684
	v_add_u32_e32 v17, 5, v11                                  // 0000000012FC: 68221685
	v_add_u32_e32 v18, 6, v11                                  // 000000001300: 68241686
	v_add_u32_e32 v11, 7, v11                                  // 000000001304: 68161687
	v_and_or_b32 v13, v13, 31, v10                             // 000000001308: D201000D 04293F0D
	v_and_or_b32 v14, v14, 31, v10                             // 000000001310: D201000E 04293F0E
	v_and_or_b32 v15, v15, 31, v10                             // 000000001318: D201000F 04293F0F
	v_and_or_b32 v16, v16, 31, v10                             // 000000001320: D2010010 04293F10
	v_and_or_b32 v17, v17, 31, v10                             // 000000001328: D2010011 04293F11
	v_and_or_b32 v18, v18, 31, v10                             // 000000001330: D2010012 04293F12
	v_and_or_b32 v11, v11, 31, v10                             // 000000001338: D201000B 04293F0B
	v_lshl_add_u32 v12, v12, 2, 0                              // 000000001340: D1FD000C 0201050C
	v_lshl_add_u32 v13, v13, 2, 0                              // 000000001348: D1FD000D 0201050D
	v_lshl_add_u32 v14, v14, 2, 0                              // 000000001350: D1FD000E 0201050E
	v_lshl_add_u32 v15, v15, 2, 0                              // 000000001358: D1FD000F 0201050F
	v_lshl_add_u32 v16, v16, 2, 0                              // 000000001360: D1FD0010 02010510
	v_lshl_add_u32 v17, v17, 2, 0                              // 000000001368: D1FD0011 02010511
	v_lshl_add_u32 v18, v18, 2, 0                              // 000000001370: D1FD0012 02010512
	v_lshl_add_u32 v11, v11, 2, 0                              // 000000001378: D1FD000B 0201050B
	ds_read_b32 v12, v12                                       // 000000001380: D86C0000 0C00000C
	ds_read_b32 v13, v13                                       // 000000001388: D86C0000 0D00000D
	ds_read_b32 v14, v14                                       // 000000001390: D86C0000 0E00000E
	ds_read_b32 v15, v15                                       // 000000001398: D86C0000 0F00000F
	ds_read_b32 v16, v16                                       // 0000000013A0: D86C0000 10000010
	ds_read_b32 v17, v17                                       // 0000000013A8: D86C0000 11000011
	ds_read_b32 v18, v18                                       // 0000000013B0: D86C0000 12000012
	ds_read_b32 v11, v11                                       // 0000000013B8: D86C0000 0B00000B
	s_waitcnt lgkmcnt(7)                                       // 0000000013C0: BF8CC77F
	v_lshrrev_b32_e32 v19, 24, v12                             // 0000000013C4: 20261898
	v_and_b32_e32 v20, s8, v12                                 // 0000000013C8: 26281808
	v_bfe_u32 v21, v12, 8, 8                                   // 0000000013CC: D1C80015 0221110C
	v_bfe_u32 v12, v12, 16, 8                                  // 0000000013D4: D1C8000C 0221210C
	s_waitcnt lgkmcnt(6)                                       // 0000000013DC: BF8CC67F
	v_lshrrev_b32_e32 v22, 24, v13                             // 0000000013E0: 202C1A98
	v_and_b32_e32 v23, s8, v13                                 // 0000000013E4: 262E1A08
	v_bfe_u32 v24, v13, 8, 8                                   // 0000000013E8: D1C80018 0221110D
	v_bfe_u32 v13, v13, 16, 8                                  // 0000000013F0: D1C8000D 0221210D
	s_waitcnt lgkmcnt(5)                                       // 0000000013F8: BF8CC57F
	v_lshrrev_b32_e32 v25, 24, v14                             // 0000000013FC: 20321C98
	v_and_b32_e32 v26, s8, v14                                 // 000000001400: 26341C08
	v_bfe_u32 v27, v14, 8, 8                                   // 000000001404: D1C8001B 0221110E
	v_bfe_u32 v14, v14, 16, 8                                  // 00000000140C: D1C8000E 0221210E
	v_add3_u32 v1, v1, v20, v23                                // 000000001414: D1FF0001 045E2901
	s_waitcnt lgkmcnt(4)                                       // 00000000141C: BF8CC47F
	v_lshrrev_b32_e32 v20, 24, v15                             // 000000001420: 20281E98
	v_add3_u32 v2, v2, v21, v24                                // 000000001424: D1FF0002 04622B02
	v_and_b32_e32 v21, s8, v15                                 // 00000000142C: 262A1E08
	v_add3_u32 v3, v3, v12, v13                                // 000000001430: D1FF0003 04361903
	v_bfe_u32 v12, v15, 8, 8                                   // 000000001438: D1C8000C 0221110F
	v_bfe_u32 v13, v15, 16, 8                                  // 000000001440: D1C8000D 0221210F
	v_add3_u32 v4, v4, v19, v22                                // 000000001448: D1FF0004 045A2704
	s_waitcnt lgkmcnt(3)                                       // 000000001450: BF8CC37F
	v_lshrrev_b32_e32 v15, 24, v16                             // 000000001454: 201E2098
	v_and_b32_e32 v19, s8, v16                                 // 000000001458: 26262008
	v_bfe_u32 v22, v16, 8, 8                                   // 00000000145C: D1C80016 02211110
	v_bfe_u32 v16, v16, 16, 8                                  // 000000001464: D1C80010 02212110
	s_waitcnt lgkmcnt(2)                                       // 00000000146C: BF8CC27F
	v_lshrrev_b32_e32 v23, 24, v17                             // 000000001470: 202E2298
	v_and_b32_e32 v24, s8, v17                                 // 000000001474: 26302208
	v_add3_u32 v1, v1, v26, v21                                // 000000001478: D1FF0001 04563501
	v_bfe_u32 v21, v17, 8, 8                                   // 000000001480: D1C80015 02211111
	v_bfe_u32 v17, v17, 16, 8                                  // 000000001488: D1C80011 02212111
	v_add3_u32 v2, v2, v27, v12                                // 000000001490: D1FF0002 04323702
	v_add3_u32 v3, v3, v14, v13                                // 000000001498: D1FF0003 04361D03
	v_add3_u32 v4, v4, v25, v20                                // 0000000014A0: D1FF0004 04523304
	s_add_i32 s5, s5, 8                                        // 0000000014A8: 81058805
	s_waitcnt lgkmcnt(1)                                       // 0000000014AC: BF8CC17F
	v_lshrrev_b32_e32 v26, 24, v18                             // 0000000014B0: 20342498
	v_and_b32_e32 v12, s8, v18                                 // 0000000014B4: 26182408
	v_bfe_u32 v27, v18, 8, 8                                   // 0000000014B8: D1C8001B 02211112
	v_bfe_u32 v18, v18, 16, 8                                  // 0000000014C0: D1C80012 02212112
	s_waitcnt lgkmcnt(0)                                       // 0000000014C8: BF8CC07F
	v_lshrrev_b32_e32 v13, 24, v11                             // 0000000014CC: 201A1698
	v_and_b32_e32 v14, s8, v11                                 // 0000000014D0: 261C1608
	v_bfe_u32 v20, v11, 8, 8                                   // 0000000014D4: D1C80014 0221110B
	v_bfe_u32 v11, v11, 16, 8                                  // 0000000014DC: D1C8000B 0221210B
	v_add3_u32 v1, v1, v19, v24                                // 0000000014E4: D1FF0001 04622701
	v_add3_u32 v2, v2, v22, v21                                // 0000000014EC: D1FF0002 04562D02
	v_add3_u32 v3, v3, v16, v17                                // 0000000014F4: D1FF0003 04462103
	v_add3_u32 v4, v4, v15, v23                                // 0000000014FC: D1FF0004 045E1F04
	s_cmp_eq_u32 s5, 32                                        // 000000001504: BF06A005
	v_add3_u32 v1, v1, v12, v14                                // 000000001508: D1FF0001 043A1901
	v_add3_u32 v2, v2, v27, v20                                // 000000001510: D1FF0002 04523702
	v_add3_u32 v3, v3, v18, v11                                // 000000001518: D1FF0003 042E2503
	v_add3_u32 v4, v4, v26, v13                                // 000000001520: D1FF0004 04363504
	s_cbranch_scc0 65389                                       // 000000001528: BF84FF6D <_Z12histogram256PjS_+0x2e0>
	s_mul_i32 s1, s1, s10                                      // 00000000152C: 92010A01
	s_mul_hi_u32 s5, s0, s10                                   // 000000001530: 96050A00
	v_add_u32_e32 v1, v1, v2                                   // 000000001534: 68020501
	s_add_i32 s1, s5, s1                                       // 000000001538: 81010105
	s_mul_i32 s5, s0, s10                                      // 00000000153C: 92050A00
	v_add3_u32 v3, v1, v3, v4                                  // 000000001540: D1FF0003 04120701
	v_mov_b32_e32 v2, s1                                       // 000000001548: 7E040201
	v_add_co_u32_e32 v1, vcc, s5, v8                           // 00000000154C: 32021005
	v_addc_co_u32_e32 v2, vcc, v9, v2, vcc                     // 000000001550: 38040509
	v_lshlrev_b64 v[1:2], 2, v[1:2]                            // 000000001554: D28F0001 00020282
	v_mov_b32_e32 v4, s3                                       // 00000000155C: 7E080203
	v_add_co_u32_e32 v1, vcc, s2, v1                           // 000000001560: 32020202
	v_addc_co_u32_e32 v2, vcc, v4, v2, vcc                     // 000000001564: 38040504
	s_add_i32 s0, s0, 1                                        // 000000001568: 81008100
	s_mov_b32 s1, s4                                           // 00000000156C: BE810004
	v_cmp_ge_u64_e32 vcc, s[0:1], v[5:6]                       // 000000001570: 7DDC0A00
	global_store_dword v[1:2], v3, off                         // 000000001574: DC708000 007F0301
	s_and_b64 vcc, exec, vcc                                   // 00000000157C: 86EA6A7E
	s_cbranch_vccz 65357                                       // 000000001580: BF86FF4D <_Z12histogram256PjS_+0x2b8>
	s_endpgm                                                   // 000000001584: BF810000
